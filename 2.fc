{-

  TASK 2 - Merge hashmaps (dictionaries)
  Write the method that merges two hashmaps into one. When keys of hashmaps
  interesect - values from first hashmap should be used, while discarded
  key/value pairs should be stored into separate hashmap.
  Method should return two hashmaps (merged_dict, discared_dict). If any
  of resulting hashmaps is empty it should be represented by `null` value.
  Hashmap key length is 256 bit. Each hashmap has at most 256 elements.
-}

() recv_internal() {
}

;; testable
(cell, cell) merge_hashmaps(cell dict1, cell dict2) method_id {
    int flag = -1;
    int key_len = 256;
    cell discarded = new_dict();

    while (flag) {
        (int min_idx, slice min_idx_value, int status) = idict_get_min?(dict2, key_len);

        if (~ status) {
            flag = 0;
        } else {
            (slice value, int idx) = idict_get?(dict1, key_len, min_idx);
            dict2~idict_delete?(key_len, min_idx);

            if (~ idx) {
                dict1~idict_set(key_len, min_idx, min_idx_value);
            } else {
                discarded~idict_set(key_len, min_idx, min_idx_value);
            }
        }
    }

    return (dict1, discarded);
}
